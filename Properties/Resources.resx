<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EditButtonSong" xml:space="preserve">
    <value>Click to choose Song Path</value>
  </data>
  <data name="ApplicationCloseCaption" xml:space="preserve">
    <value>Close SoundBoard</value>
  </data>
  <data name="EditButtonPicture" xml:space="preserve">
    <value>Click to choose Picture Path</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="EditButtonTextEndTime" xml:space="preserve">
    <value>End Time:</value>
  </data>
  <data name="EditTabNameTooShort" xml:space="preserve">
    <value>New Tab Name is too short. At least 3 characters are required.</value>
  </data>
  <data name="ButtonAccept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="EditButtonTextImageSize" xml:space="preserve">
    <value>Image support only up to 512x512 pixel.</value>
  </data>
  <data name="EditTabNameSettings" xml:space="preserve">
    <value>New Tab Name can not be</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ic_action_collection" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\ic_action_collection.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="EditButtonName" xml:space="preserve">
    <value>New Button Name</value>
  </data>
  <data name="EditTabNameTooLong" xml:space="preserve">
    <value>New Tab Name is too long. Maximum are 15 Characters.</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="contextMenuStripButtonRemove" xml:space="preserve">
    <value>Remove Button</value>
  </data>
  <data name="EditTabTitle" xml:space="preserve">
    <value>Edit Tab:</value>
  </data>
  <data name="contextMenuStripButtonMoveTab" xml:space="preserve">
    <value>Move to Tab</value>
  </data>
  <data name="ic_action_play" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\ic_action_play.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="EditButtonSongName" xml:space="preserve">
    <value>Song Name:</value>
  </data>
  <data name="contextMenuStripButtonEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditButtonTextDuration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="EditButtonTextCostumTime" xml:space="preserve">
    <value>Costum Time</value>
  </data>
  <data name="EditTabLabel" xml:space="preserve">
    <value>Change Tab Name:</value>
  </data>
  <data name="contextMenuStripTabEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditButtonTextNewButton" xml:space="preserve">
    <value>New Button Name:</value>
  </data>
  <data name="EditButtonTextPathSong" xml:space="preserve">
    <value>Path to Song:</value>
  </data>
  <data name="EditButtonTextPathPicture" xml:space="preserve">
    <value>Path to Icon:</value>
  </data>
  <data name="EditButtonTextStartTime" xml:space="preserve">
    <value>Start Time:</value>
  </data>
  <data name="ButtonCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ic_action_pause" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\ic_action_pause.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="contextMenuStripTabAddButton" xml:space="preserve">
    <value>Add Button</value>
  </data>
  <data name="ApplicationCloseText" xml:space="preserve">
    <value>Do you really want to close SoundBoard?</value>
  </data>
  <data name="ic_action_stop" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\ic_action_stop.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="EditButtonNameTooLong" xml:space="preserve">
    <value>New Button Name is too long. Maximum are 50 Characters.</value>
  </data>
  <data name="EditButtonNameTooShort" xml:space="preserve">
    <value>New Button Name is too short. At least 3 characters are required.</value>
  </data>
  <data name="EditButtonRepeat" xml:space="preserve">
    <value>Repeat</value>
  </data>
  <data name="EditButtonSongTooLong" xml:space="preserve">
    <value>Sound File is to long. Song should be under 1h.</value>
  </data>
  <data name="EditButtonTextNameExists" xml:space="preserve">
    <value>The Button Name already exists. Please choose different name.</value>
  </data>
  <data name="EditButtonTextPosition" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="EditButtonTimeEndHigherSong" xml:space="preserve">
    <value>End Time should not be greater than Song Duration.</value>
  </data>
  <data name="EditButtonTimeEndSmallerEnd" xml:space="preserve">
    <value>End Time should not be smaller than Start Time.</value>
  </data>
  <data name="EditButtonTimeStartHigherEnd" xml:space="preserve">
    <value>Start Time should not be greater than End Time.</value>
  </data>
  <data name="EditButtonTimeStartHigherSong" xml:space="preserve">
    <value>Start Time should not be greater than Song Duration.</value>
  </data>
</root>